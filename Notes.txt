danoggin
	A wellness check app
	com.bluevistasolutions.danoggin

-------------------------
keytool -genkey -v -keystore danoggin_key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias danoggin
Password: Danoggin!!

What is your first and last name?
  [Unknown]:  John Ivory
What is the name of your organizational unit?
  [Unknown]:
What is the name of your organization?
  [Unknown]:  Blue Vista Solutions
What is the name of your City or Locality?
  [Unknown]:  New Hartford
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Ivory, OU=Unknown, O=Blue Vista Solutions, L=New Hartford, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA256withRSA) with a validity of 10,000 days
        for: CN=John Ivory, OU=Unknown, O=Blue Vista Solutions, L=New Hartford, ST=NY, C=US
[Storing danoggin_key.jks]

-------------------------
Pat:	iPhone, iOS 18				pobrien57@gmail.com 
Teresa:	iPhone, iOS 18.4			tessjob60@gmail.com 
Sean:	Pixel 9 Pro XL, Android 15	obrienseanpat@gmail.com

GIT - associating with cloud repository
	git remote remove origin
	
Bitbucket
	Gazpacho / bluevista@gmail.com
	git remote add origin https://Gazpacho@bitbucket.org/Gazpacho/danoggin.git
	git push -u master

GitHub
	git remote add origin https://github.com/GazpachoZen/danoggin.git
	git push -u origin master

--------------------
flutter build apk --release
build/app/outputs/flutter-apk/app-release.apk

================================================================================
Attached are the source files for an app called Danoggin. It is a cognitive check-in application with two primary user roles: Responders and Observers. The app is designed to monitor cognitive awareness through regular quiz-like check-ins. Admin functionality for the related Firestore database and images is provided through a family of Python scripts. Below is an overview of some key points. Please examine the source files to the point of understanding them, but no summary is needed. Await further instruction.

Main roles...
- Responders: Users who answer periodic quiz questions
- Observers: Users who monitor responders' performance on check-ins

Main Functionality...
- Question-based check-ins with multiple-choice answers
- Scheduled notifications to prompt responders to complete check-ins
- Tracking of missed/incorrect responses
- Observer dashboard to monitor responder performance
- Relationship management between responders and observers

Architecture...
- Flutter-based mobile app with Firebase backend
- FireStore for data storage
- Firebase Cloud Storage for image assets
- Firebase Authentication for user management

Admin Tools...
- Python scripts for backend management
- Firebase management utilities

Additional...
- We are using Firestore's mechanism for test Android releases and the Apple Store for iOS releases.
================================================================================

---------------------
---------------------
---------------------
---------------------
I'd like to be more judicious about what exactly is getting archived away with Git, especially as it pertains to what makes its way up to GitHub. 
---------------------
Try all this with Tracy's phone.
---------------------
JEI - remember to turn kDevModeEnabled back to false wherever it exists.
---------------------
For the responder buttons, I find the "coral" highlight be too close to red. Can we change that to one of the blues?
---------------------
It would be nice to have a mechanism for an observer to somehow coerce a related responder's app to present a question.
---------------------
The app presently uses anonymous authentication for Firebase. We should probably button that up before making this app generally available. I'm not very familiar with Firebase. What would be the necessary steps?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> LATER...
Make a states and cities question pack. All the state capitals, etc.
---------------------
As a future capability, we'll eventually want the apps to notice that updates are available.
---------------------
Danoggin should auto-start when phone powers up. Please discuss how this is accomplished before suggesting any code changes.
---------------------
---------------------
================================================================================
What's left to do (according to Claude)...

Version Management
	Version Numbering System
		Implement semantic versioning (e.g., 1.0.0-beta.1)
		Add version information to the app UI (probably in settings)
		Create a system to track database schema versions for Firebase
		Consider a minimum supported version mechanism

Technical Completeness
	Error Handling
		Comprehensive error logging and crash reporting
		Graceful degradation when network is unavailable
		User-friendly error messages for all failure cases
	Data Backup/Recovery
		Data migration strategy between versions
		Consider backup mechanisms for check-in data
		Document recovery procedures for admins
	Performance Optimization
		Check for memory leaks in long-running processes
		Optimize Firebase queries (especially with pagination)
		Test with large datasets

User Experience Polish
	Onboarding
		Better first-run experience
		Guided tour of features
		Clear instructions for each role
	Help & Documentation
		In-app help system
		FAQ section
		Contact/support mechanism
	Visual Consistency
		Confirm all UI elements follow your design system
		Proper loading states everywhere
		Consistent spacing and typography

Security & Privacy
	Security Audit
		Review Firebase security rules
		Ensure sensitive data protection
		Check for proper authentication flows
	Privacy Policy
		Document what data is collected
		How data is used and stored
		User data deletion policy

Testing & QA
	Testing Coverage
		Unit tests for critical functions
		Integration tests for Firebase interactions
		UI automation tests for key user flows
	Beta Testing Plan
		Define beta participant selection criteria
		Feedback collection mechanism
		Issue tracking system
	Device Compatibility
		Test on various device sizes
		Check different Android versions
		Verify different network conditions

Distribution Readiness
	App Store Requirements
		App icons for all required sizes
		Store listing content (descriptions, screenshots)
		Privacy policy URL for store listing
		Age rating appropriateness
	Distribution Method
		Google Play Internal Testing
		Firebase App Distribution
		Release notes template
	Analytics
		Track key usage metrics
		Monitor crash rates
		User engagement tracking

Admin Tools Enhancement
	Additional Admin Features
		User analytics dashboard
		Bulk operations for user management
		Export functionality for data analysis
	Monitoring
		System health monitoring
		Alert system for critical issues
		Database size monitoring

Legal Considerations
	Terms of Service
		User agreement for beta testers
		Liability limitations
		Data use policies
	Compliance
		Privacy regulations (GDPR, CCPA if applicable)
		Healthcare data considerations if relevant
		Age restrictions if needed

Emergency Planning
	Rollback Procedures
		Database rollback strategy
		App version rollback plan
		User notification system
	Support Structure
		Beta support contact method
		Issue escalation process
		Emergency response plan

------------------------------------------------------------------------
Marvel
	Thor | Chris Hemsworth
	Iron Man | Robert Downey Jr.
	Hulk | Mark Ruffalo
	Black Widow | Scarlett Johansson
	Vision | Paul Bettany
	Captain America | Chris Evans
	Hawkeye | Jeremy Renner
	Shang-Chi | Simu Liu
	Deadpool | Ryan Reynolds
	Daredevil | Charlie Cox
	Luke Cage | Mike Colter
	Star-Lord | Chris Pratt
	Rocket | Bradley Cooper
	Gamora | Zoe Saldana
	Dr. Strange | Benedict Cumberbatch
	Spider-Man | Tom Holland
	Winter Soldier | Sebastian Stan
	Thanos | Josh Brolin
	Loki | Tom Hiddleston
	Green Goblin | Willem Dafoe
	Nick Fury | Samuel L. Jackson
	Falcon | Anthony Mackie
	War Machine | Don Cheadle
	Wolverine | Hugh Jackman
	Black Panther | Chadwick Boseman
	Scarlet Witch | Elizabeth Olsen
	Gamora | Zoe Salda√±a
	Captain Marvel | Brie Larson
	Nick Fury | Samuel L. Jackson
	Ultron | James Spader
	Ant Man | Paul Rudd

Marvel (X-Men)
	Professor X          
	Mystique             
	Rogue                
	Gambit               
	Magneto
	Cyclops
	Beast
	
Trek
	Kirk
	Spock
	Bones
	Uhura
	Scotty
	Sulu
	Chekov
	Khan
	Captain Pickard
	Commander Data

DC
	Superman
	Batman
	Robin
	Green Lantern
	Flash
	Joker
	Riddler
	Lex Luthor
	Catwoman

Star Wars
	Luke
	Leah
	Han Solo
	Darth Vader
	Lando
	Jar Jar
	C3PO
	R2D2
	Chewbacka
	Yoda

Lord of the Rings
	Bilbo
	Sam
	Merri
	Pippin
	Frodo
	Golum
	Gandalf
	Boromir
	Sauramon
	Gimli
	Legolas

Gilligan's Island
	Gilligan
	Skipper
	Professor
	MaryAnne
	Ginger
	Mr. Howle
	Mrs. Howle

