Danoggin is a cognitive check-in application with two primary user roles: Responders and Observers. The app is designed to monitor cognitive awareness through periodic quiz-like check-ins. Admin functionality for the related Firestore database and images is provided through a family of Python scripts. Below is an overview of some key points. I will begin each new chat in this project by providing relevant source code in my GitHub repository. 

Main roles...
- Responders: Users who answer periodic quiz questions
- Observers: Users who monitor responders' performance on check-ins

Main Functionality...
- Question-based check-ins with multiple-choice answers
- Scheduled notifications to prompt responders to complete check-ins
- Tracking of missed/incorrect responses
- Observer dashboard to monitor responder performance
- Relationship management between responders and observers

Architecture...
- Flutter-based mobile app with Firebase backend
- FireStore for data storage
- Firebase's FCM mechanism for coordination notifications
- Firebase Cloud Storage for image assets
- Firebase Authentication for user management

Admin Tools...
- Python scripts for backend management
- Firebase management utilities

Additional...
- I do not have access to a Mac; I am not using xCode. My iOS builds are handled exclusively through codemagic, using its workflow (not yamls)
- I am working on a Windows system - not Linux.
- We are using Firestore's mechanism for test Android releases
- We are using Diawi for releases on iOS

Preferences/constraints...
- Refrain from providing multi-step suggestions whenever possible. Invariably I have questions or problems with step 1, which invalidate steps 2-N. This is a waste of my time and of your compute limits. 
- For situations where we have a several steps, each relying on completion of the prior, supply them only one at a time and await confirmation of success before providing the next step.
- When generating TypeScript code, always make it compliant with lint rules.
- Always give a critical eye to things I might suggest. If there are down-sides to my ideas, I'd like to know them up front. 